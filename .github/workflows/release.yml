name: Release

on: workflow_dispatch

env:
  BASE_REPO: intellecta-lk/intellecta

jobs:
  get-version:
    name: semantic-release
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new_release_published }}
      new-release-version: v${{ steps.semantic-release.outputs.new_release_version }}
      new-release-channel: ${{ steps.semantic-release.outputs.new_release_channel }}
      new-release-notes:  ${{ steps.semantic-release.outputs.new_release_channel }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ env.BASE_REPO }}
          token: ${{secrets.PRIVATE_TOKEN}}
      - id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          branch: main
          working_directory: app
        env:
          GITHUB_TOKEN: ${{secrets.PRIVATE_TOKEN}}
 

  build:
    runs-on: windows-latest
    needs: get-version
    if: needs.get-version.outputs.new-release-published == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ env.BASE_REPO }}
          token: ${{secrets.PRIVATE_TOKEN}}

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'
      - run: yarn install
      - name: Bump up version
        uses: jaywcjlove/github-action-package@main
        with:
          version: ${{ needs.get-version.outputs.new-release-version }} 
      - run: yarn workspace app build:electron
      - run: yarn workspace app pack:electron
      - uses: actions/cache@v4
        with:
          path: |
            app/artifacts/*.*
          key: electron-artifacts-${{ github.run_id }}-${{ github.run_attempt }}
          enableCrossOsArchive: true

 
    

  release:
    runs-on: ubuntu-latest
    needs: 
      - build
      - get-version
    if: needs.get-version.outputs.new-release-published == 'true'
    permissions:
      contents: write
    steps:
      - uses:  actions/cache@v4
        id: cache
        with:
          path: ${{ github.workspace }}
          key: electron-artifacts-${{ github.run_id }}-${{ github.run_attempt }}
          fail-on-cache-miss: true
          enableCrossOsArchive: true
      - run: ls -la

      - run: |
          gh release create ${{ needs.get-version.outputs.new-release-version }}  \
          -R https://github.com/${{github.repository}}  \
          -- *.*
        env:
          GH_TOKEN: ${{ github.token }}
 
          


  delete_release_if_failed:
    runs-on: ubuntu-latest
    needs: 
       - build
       - get-version
       - release
    if: always() && contains(needs.*.result, 'failure')
    steps:
      - run: |
          gh release delete ${{ needs.get-version.outputs.new-release-version }}  \
          -R https://github.com/${{ env.BASE_REPO }} \
           --cleanup-tag 
        env:
          GH_TOKEN: ${{secrets.PRIVATE_TOKEN}}

     
          

      
    
    
    
      
    
